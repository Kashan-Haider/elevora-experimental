"""making experimental changes

Revision ID: b2d27bcc9b97
Revises: 50b07369cc47
Create Date: 2025-05-25 23:22:28.757807

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b2d27bcc9b97'
down_revision: Union[str, None] = '50b07369cc47'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pages')
    op.drop_table('audits')
    op.drop_constraint(op.f('content_suggestions_page_id_fkey'), 'content_suggestions', type_='foreignkey')
    op.create_foreign_key(None, 'content_suggestions', 'page', ['page_id'], ['id'], ondelete='CASCADE')
    op.alter_column('page', 'project_id',
               existing_type=sa.VARCHAR(),
               type_=sa.UUID(),
               nullable=True)
    op.create_foreign_key(None, 'page', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'page', type_='foreignkey')
    op.alter_column('page', 'project_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(None, 'content_suggestions', type_='foreignkey')
    op.create_foreign_key(op.f('content_suggestions_page_id_fkey'), 'content_suggestions', 'pages', ['page_id'], ['id'], ondelete='CASCADE')
    op.create_table('audits',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('page_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('audit_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('issues', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('recommendations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['pages.id'], name=op.f('audits_page_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('audits_pkey'))
    )
    op.create_table('pages',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_audited', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('pages_project_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pages_pkey'))
    )
    # ### end Alembic commands ###
